{"ast":null,"code":"var _jsxFileName = \"/Users/pori/Documents/react-projects/01-starting-setup/src/components/Expenses/ExpensesChart.jsx\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n  const filteredExpenses = props.expenses.filter(expense => parseInt(props.selectedOption) === expense.date.getFullYear());\n  for (const expense of filteredExpenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpensesChart;\nexport default ExpensesChart;\nvar _c;\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ExpensesChart","props","chartDataPoints","label","value","filteredExpenses","expenses","filter","expense","parseInt","selectedOption","date","getFullYear","expenseMonth","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pori/Documents/react-projects/01-starting-setup/src/components/Expenses/ExpensesChart.jsx"],"sourcesContent":["import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [\n    {label: \"Jan\", value: 0},\n    {label: \"Feb\", value: 0},\n    {label: \"Mar\", value: 0},\n    {label: \"Apr\", value: 0},\n    {label: \"May\", value: 0},\n    {label: \"Jun\", value: 0},\n    {label: \"Jul\", value: 0},\n    {label: \"Aug\", value: 0},\n    {label: \"Sep\", value: 0},\n    {label: \"Oct\", value: 0},\n    {label: \"Nov\", value: 0},\n    {label: \"Dec\", value: 0}\n  ];\n\n  const filteredExpenses = props.expenses.filter(expense => (parseInt(props.selectedOption)===expense.date.getFullYear()));\n\n  for (const expense of filteredExpenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />\n};\n\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC7B,MAAMC,eAAe,GAAG,CACtB;IAACC,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,EACxB;IAACD,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAC,CAAC,CACzB;EAED,MAAMC,gBAAgB,GAAGJ,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAKC,QAAQ,CAACR,KAAK,CAACS,cAAc,CAAC,KAAGF,OAAO,CAACG,IAAI,CAACC,WAAW,CAAC,CAAE,CAAC;EAExH,KAAK,MAAMJ,OAAO,IAAIH,gBAAgB,EAAE;IACtC,MAAMQ,YAAY,GAAGL,OAAO,CAACG,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC5CZ,eAAe,CAACW,YAAY,CAAC,CAACT,KAAK,IAAII,OAAO,CAACO,MAAM;EACvD;EAEA,oBAAOhB,OAAA,CAACF,KAAK;IAACmB,UAAU,EAAEd;EAAgB;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GAxBIrB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}